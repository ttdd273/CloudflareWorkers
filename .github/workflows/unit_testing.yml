name: Unit Testing
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      # Single * only matches on a branch that doesn't contain /
      # To get all branches, we need **
      - "**"

# We want to run all tests if it's a push to main, but run tests for affected workers otherwise
jobs:
  test-all-workers: 
    name: Test All Workers (Main Branch)
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install and Run Tests for All Workers
        # | is YAML multi line block scalar syntax, preserving newlines within the string
        # Which is helpful for writing multiple commands
        run: |
          # Find all directories with the name worker
          dirs=$(find . -maxdepth 1 -type d -name '*worker*')

          for dir in $dirs; do
            echo "Testing worker: $dir"
            cd $dir
            npm ci
            npm test
            cd ..
          done
    
  # test-affected-workers:
  #   name: Test Only Affected Workers
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main'

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Get Changed Files
  #       run: | # Get a list of directories that have the word `worker` and have changed files. We want to cut out the second part of the path because these the first arg is the repo folder
  #         dirs=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '/worker/' | cut -d '/' -f2 )
  #         echo "Changed directories: $dirs"
  #         echo "dirs=$dirs" >> $GITHUB_ENV

  #     - name: Run Tests for Affected Workers 
  #       run: | 
  #         if [ -z "${{ env.dirs }}" ]; then
  #           echo "No affected workers. Skipping tests."
  #         else
  #           for dir in ${{ env.dirs }}; do
  #             echo "Test worker: $dir"
  #             cd $dir
  #             npm install
  #             npm test
  #             cd .. 
  #           done
  #         fi

  # deploy:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   needs: test
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build & Deploy Worker
  #       uses: cloudflare/wrangler-action@v3
  #       with:
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
